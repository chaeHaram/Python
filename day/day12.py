# 순서 존재 : 리스트 튜플 문자열


# iter     기본단위    i       len
# 문자열      문자     ""       ""
# --------------------------------
# 리스트              
# 튜플       자료      ""      ""
# 세트
# --------------------------------
# 딕셔너리     키       ""     ""

# 마이너스 인덱스?
# a[1,2,3]
#   0,1,2
#  -3,-2,-1
# a[-1] = a[2] = 3
# a[-3] = a[0] = 1

# li=["hello","world"]
# li[-1] = 'world'
# li[-1][0] = 'w' (문자열이라 인덱싱이 가능함 정수형이라면 불가능)

# for, 자료형 활용을 잘해야 프로그래밍을 잘할 수 있음.

# 슬라이싱 특정 패턴이 있는 자료를 처리할 때, 주로 사용
# ex) 주민번호
# 980217 - 1212621
# 생년월일 - 
# 
# 자료 [start:stop:step]
# a="19980217"
# print(a[1:5]) step 생략가능(default : 1)
# print(a[:4]) start 생략가능(default : 0)
# print(a[4:]) stop 생략가능(default : 마지막) 

# y = input("생년월일 입력 (ex) 19980217 : ")

# print(y[:4],"년")
# print(y[4:6],"월")
# print(y[6:],"일")

# li = [10,20,30,40,50]
# print(li[:3])
# print(li[2:])

# li=['20181127', '19860303', '20000324', '19750119', '19900407', '19850511', '20090517', '19811214', '20120125', '19920308', '20040610', '19990310', '20171126', '20160727', '19751006', '19920823', '20060103', '20171208', '19990222', '19731206', '19960824', '19970902', '19780714', '19901002', '19970224', '20091107', '19730209', '19890601', '19951003', '20051022', '19770520', '20000206', '19711221', '19820526', '20080413', '20200104', '19780204', '20030524', '20040509', '19800225', '19820327', '20130610', '19880426', '19880421', '19850101', '20011205', '19940326', '20200104', '19750823', '19701226', '20190626', '20150819', '19720626', '19890910', '20081223', '19831028', '19910406', '20160118', '20150823', '20090925', '19970812', '19800123', '20151108', '20020109', '19820414', '19920804', '20000318', '19700717', '20150610', '19840907', '19991110', '20060611', '19891204', '20030319', '19700302', '20051213', '20020216', '20050403', '19831111', '19780720', '20051218', '20000920', '19991121', '19751108', '19941216', '19891023', '20181121', '20080207', '19840818', '20040525', '19961028', '19891121', '20040411', '20121113', '19900508', '20150813', '19880622', '19830312', '20040828', '20060304', '19861025', '19770428', '19940118', '19700809', '20030414', '19951004', '19930421', '20061015', '20160410', '20011022', '19980123', '19920507', '20070602', '19930414', '20181014', '19801105', '19900409', '19850217', '19910712', '19830314', '19960424', '20080223', '19880915', '20131213', '20150724', '20040504', '20120419', '20101202', '19951120', '19851116', '19740314', '20041201', '20060703', '20070407', '20080518', '20050222', '19760416', '20091111', '19761102', '19781024', '20011002', '19750217', '19971113', '19921026', '19860128', '20181227', '19770401', '19830509', '19720417', '19921125', '20010914', '20080105', '19901207', '20020612', '19780906', '20060401', '19880316', '19720521', '20121220', '19700107', '19840804', '19990428', '20100905', '20160817', '19781107', '20000927', '20070525', '20200824', '19990620', '20201125', '20080920', '19720326', '20140925', '20070828', '19711120', '20060227', '20120605', '20181121', '20001209', '20000123', '19991004', '19810918', '19970602', '19990219', '20170603', '19720420', '19910321', '20191010', '19800125', '20171026', '20030717', '19720423', '19780912', '20150603', '19830804', '20140521', '20111010', '20080209', '20160910', '19800926', '20020821', '19990203', '20080224', '19830627', '19781220', '20160815', '19930518', '19751124', '19861121', '19940522', '20040326', '19991007', '20190425', '19760526', '19851219', '20131221', '19740405', '20160524', '19930117', '19730915', '19840323', '19760926', '19780502', '19870209', '20031121', '20140627', '20030201', '20130304', '20170326', '19830320', '19970726', '19850905', '20110127', '19881228', '20080821', '19811106', '19850411', '20171220', '19930306', '19930222', '20121223', '19760414', '19940618', '19840721', '19730118', '19980815', '19700307', '20140311', '20200313', '20070217', '20100706', '19871215', '19770518', '19910114', '20030110', '19850401', '20130923', '20201107', '20041224', '19990706', '20191115', '20040707', '20000110', '19810319', '19870726', '20040405', '19990113', '19790924', '19960817', '20100414', '19920124', '20180705', '20050116', '20130924', '20121023', '19860904', '19750614', '19781023', '19831128', '19790621', '19910106', '19960601', '19700311', '20120802', '19780306', '20030114', '19970615', '19741112', '19800410', '19870923', '19711203', '20200824', '20030415', '19820901', '20000816', '19910224', '20051203', '19990712', '19701224', '19961024', '20081216', '19741103', '19730223', '19750626', '20201118', '20131115', '19850714', '20170906', '20120213', '19820408', '19871103', '20090206', '20160218', '20000201', '19870225', '19971207', '19750317', '19751223', '20110527', '19801128', '20090206', '19911108', '19710224', '20190805', '19820124', '19881210', '19801026', '19800123', '20150112', '20060411', '20090708', '19810628', '19791205', '20190819', '19750926', '19830212', '19971127', '20120712', '20101020', '19901002', '20190321', '19840915', '20050723', '20001213', '19861018', '19940626', '19841008', '19741220', '20080812', '20091204', '20160225', '19741127', '19910610', '20041211', '19900526', '20030514', '20040712', '19951217', '19970427', '19880621', '20130219', '19921003', '19720711', '19970609', '19700101', '20181125', '20190711', '20150313', '20140415', '20061102', '19730406', '19801218', '19860823', '19970205', '20070819', '19850309', '19870804', '19940817', '19850921', '19700801', '19851013', '19710428', '19980109', '20130403', '20190908', '19910504', '20201016', '19890401', '20090915', '20081012', '19711214', '19990617', '19860906', '20050820', '19961011', '19980414', '19750916', '20090127', '20150226', '19811015', '19841218', '19890320', '20051208', '19850216', '19920301', '19700404', '19940223', '19961021', '19851215', '19760902', '19771225', '20070415', '19790604', '20140718', '19920926', '19961101', '19790625', '19790911', '20160801', '19720211', '19810426', '19981201', '20100422', '20011109', '19920904', '20040607', '20130510', '20100922', '19790709', '20070626', '20040324', '20010327', '20180923', '20070628', '19850128', '19720507', '19880513', '19951207', '19991110', '19960905', '20071122', '20071221', '19741018', '20051213', '20091213', '19900505', '19850518', '19720409', '20040526', '19880918', '19970502', '19700922', '19830408', '19730607', '20100202', '19741025', '20060818', '20170602', '19971123', '19860601', '19860906', '20120904', '19920117', '19810603', '20090318', '19770923', '19850117', '19880114', '19850814', '19990509', '20111116', '19920721', '20020822', '19840621', '19930720', '19911006', '19850606', '20170624', '20010424', '19700423', '19721014', '19710219', '19700404', '19701001', '19920724', '19851108', '20010613', '20130816', '20081206', '20200704', '19840309', '19721020', '19861212', '20090502', '20040909', '20051205', '20120719', '20180402', '19940205', '20011117', '19971227', '19881009', '19751228', '19830705', '20030523', '20080507', '19881205', '19961101', '20041209', '19740916', '19970418', '20110928', '20130911', '19791009', '20190628', '19830626', '20131110', '19701118', '19791121', '19880625', '19880211', '20140601', '20121126', '19830407', '19930523', '19760802', '19870605', '20000402', '20190921', '19980722', '19951122', '20160812', '19700620', '19901013', '19880105', '19740502', '19761205', '20000207', '19940605', '19930627', '19780812', '19780221', '19940718', '19880221', '19950810', '20120325', '20100218', '19850322', '20130218', '19870918', '19790818', '20180111', '19730718', '20010522', '20171111', '20010407', '20150628', '19781019', '20050806', '19970802', '19901113', '20091108', '19930211', '19830506', '20121013', '20101127', '20070828', '20110206', '19750123', '20090711', '19760914', '19840322', '19700918', '20050928', '19780928', '19990722', '19880519', '20011022', '19910513', '19701108', '20161214', '20040827', '19751123', '19711212', '20170914', '20170121', '19991204', '19710819', '20140917', '20150917', '19820802', '19830406', '19930507', '20021123', '20150623', '20190911', '19721125', '19800404', '20130125', '20120911', '19710928', '19980327', '20161122', '20150718', '20071122', '20190524', '19890625', '19830728', '19950624', '20070808', '19830909', '19711116', '19700208', '19980823', '19991215', '20180920', '20010727', '19760704', '20100425', '19870704', '19800813', '19871109', '19940206', '20181127', '19790312', '19820505', '20160825', '19910427', '19850916', '20131124', '20160628', '20160217', '20080612', '19910320', '20180104', '20021113', '19980611', '19920109', '19941209', '20161020', '20130223', '19710828', '19810402', '20010225', '19740510', '19810825', '19900320', '19831220', '20061113', '20030224', '19890405', '19980603', '19870124', '20201212', '20060625', '20030909', '20160406', '19741014', '20030902', '20160121', '20110816', '20131223', '19940703', '19880127', '20200526', '19730727', '20190812', '20130708', '19990808', '20160802', '20040312', '19771028', '20090406', '19911201', '20010224', '20130828', '20100514', '19831023', '20091021', '19890212', '20051025', '20170207', '19730822', '19770620', '19710702', '20080108', '20041226', '19850220', '20010505', '19730101', '19830108', '19950714', '20021003', '19960303', '20030827', '20140318', '20061210', '20180713', '20120522', '19780712', '19870320', '19801017', '20071008', '19771002', '20111108', '20111114', '19700523', '20031115', '19990312', '19980228', '20160420', '19760713', '19741125', '19770427', '20151110', '19981219', '20050708', '19861021', '19800117', '19951116', '19971221', '20040514', '19751002', '20120108', '20020919', '20180107', '19960520', '19870227', '19720322', '20161126', '19940626', '19980420', '19971224', '19771224', '20200204', '20020221', '20190328', '19960301', '19970804', '20071201', '20110801', '19810715', '19980913', '20000106', '20020816', '20180813', '19990623', '19790814', '20201021', '20150919', '19800526', '20110319', '19970317', '19960106', '20060117', '20020901', '19940904', '19970326', '19890325', '20140704', '19871201', '19881115', '19820113', '20120316', '20011110', '19730405', '19950106', '19821004', '20080118', '19950509', '19990111', '19720203', '19930824', '19701121', '19740308', '20150916', '20060319', '19931025', '19980308', '19721207', '20140928', '19770225', '19910301', '19890706', '19991005', '20140920', '19891103', '19800221', '20190614', '20100605', '19840106', '20150124', '19781019', '20030711', '19810725', '20201219', '20020616', '19950412', '19710522', '19851213', '20000501', '19801102', '19940423', '19890218', '20070501', '20080217', '20060913', '20200416', '20010304', '20100319', '20150718', '19860419', '19950115', '19820221', '19820715', '20180104', '19801209', '20180628', '19750510', '20000921', '20181018', '19791206', '20140515', '19950902', '20171123', '19920116', '20070304', '19741221', '20160325', '19731204', '19750902', '19751116', '20190703', '19700722', '20101123', '19751101', '20040525', '20070522', '19851116', '20041016', '20190715', '19881225', '19910612', '19720616', '20041106', '20200716', '19970722', '19730708', '19710823', '19730128', '19900819', '20070809', '19820802', '19870416', '19870221', '20121206', '19890411', '19911013', '20110406', '20141101', '19990624', '19761024', '20040627', '19720615', '19960407', '20130220', '20071110', '19800916', '19950916', '19950818', '19990303', '19711006', '19931111', '19720422', '19831128', '19790822', '20030115', '20150320', '19850821', '19811003', '19920604', '19930825', '20090207', '19780313', '19790828', '19751122', '19940906', '19900907', '20020618', '20040420', '20190311', '20200502', '19870727', '20050111', '19750503', '19900518', '19981119', '19760515', '19710104', '19970414', '19810718', '20080316', '19860305', '19720217', '20001124', '20050105', '20131226', '20110501', '19820625', '19990428', '20170214', '20021114', '19980404', '20050710', '20140123', '19870803', '20111119', '20060625', '19770612', '19870416', '20000209', '20080925', '20021220', '19840511', '20090925', '20150517', '19860923', '20151220', '19990801', '20070109', '20150321', '19920605', '19760212', '20091017', '19721215', '19851203', '20040506', '20010220', '19820127', '19761215', '19920523', '20020920', '20070302', '19941005', '19830323', '19741217', '20010519', '19790521', '19791117', '19750511', '19750224', '19930306', '19820213', '19780507', '19830208', '19700208', '20130203', '19711127', '19950109', '20170425', '20170405', '20050505', '19901218', '20020522', '19710921', '20200722', '19860107', '20170525', '19881019', '19710311', '20070910', '19710213', '19960727', '19820801', '19891019', '20060719', '20190919', '19700303', '19950505', '20070214', '20200212', '19970718', '19960425', '19890403', '19870317', '19780805', '20100502', '19930601', '19760401', '19930903', '19861105', '19751223', '19720307', '20040923', '19700228', '19981017', '20020228', '19941224', '20050422', '19820113']
# cnt=0
# cnt1=0
# cnt2=0

# # 1985년생은 몇명?
# for i in li:
#     if i[:4]=="1985":
#         cnt+=1
# print("1985년생은 : ",cnt)

# # 2월생은 몇명?
# for i in li:
#     if i[4:6]=="02":
#         cnt1+=1
# print("2월생은 : ",cnt1)

# # 2000년도 이후에 태어난 사람은 몇명?
# for i in li:
#     if int(i[:4])>=2000:
#         cnt2+=1
# print("2000년도 이후에 태어난 사람은 : ",cnt2)

# iterable 자리에 어떤 자료형이 있는지
# i는 어떤 자료형인지

# money = ['9353000원', '9025000원', '1334000원', '683000원', '4343000원', '2489000원', '5974000원', '6219000원', '8940000원', '7152000원', '7089000원', '6289000원', '3598000원', '2366000원', '5249000원', '2688000원', '8769000원', '2812000원', '7876000원', '7137000원', '3771000원', '2797000원', '1490000원', '3866000원', '5798000원', '7116000원', '9263000원', '844000원', '1719000원', '5637000원', '344000원', '2441000원', '3858000원', '9063000원', '5155000원', '5992000원', '85000원', '9210000원', '254000원', '5691000원', '4775000원', '8458000원', '584000원', '9638000원', '3240000원', '3495000원', '5615000원', '1235000원', '4817000원', '9335000원', '4413000원', '6361000원', '1809000원', '1726000원', '2157000원', '7625000원', '307000원', '7229000원', '1651000원', '5688000원', '2017000원', '4933000원', '5202000원', '5575000원', '3075000원', '4891000원', '6171000원', '7041000원', '3721000원', '6367000원', '6008000원', '5968000원', '6919000원', '9695000원', '4824000원', '5030000원', '3687000원', '5554000원', '7961000원', '8131000원', '9459000원', '8657000원', '233000원', '2679000원', '603000원', '7065000원', '3919000원', '2150000원', '7138000원', '6851000원', '4522000원', '4551000원', '7564000원', '5985000원', '2033000원', '7245000원', '889000원', '5747000원', '8477000원', '4198000원', '1593000원', '1039000원', '2212000원', '7425000원', '3839000원', '3734000원', '3001000원', '4896000원', '8530000원', '9358000원', '9464000원', '847000원', '6957000원', '7441000원', '3920000원', '838000원', '8974000원', '5052000원', '6582000원', '237000원', '4291000원', '8590000원', '5113000원', '223000원', '4285000원', '9736000원', '3479000원', '6582000원', '1154000원', '3294000원', '7103000원', '3626000원', '6857000원', '2565000원', '4191000원', '519000원', '6287000원', '2572000원', '9093000원', '4355000원', '1913000원', '2253000원', '7972000원', '7427000원', '126000원', '6832000원', '2142000원', '5738000원', '6769000원', '9586000원', '6405000원', '7212000원', '779000원', '9572000원', '363000원', '6814000원', '3382000원', '4297000원', '2065000원', '210000원', '4533000원', '9499000원', '3432000원', '7265000원', '3072000원', '6542000원', '4727000원', '5515000원', '4910000원', '4432000원', '4616000 원', '3342000원', '1217000원', '8719000원', '1682000원', '344000원', '6121000원', '6225000원', '4534000원', '7038000원', '4467000원', '5579000원', '2494000원', '5117000원', '8211000원', '7937000원', '2902000원', '6814000원', '4455000원', '1345000원', '9227000원', '2765000원', '8656000원', '3801000원', '6949000원', '4645000원', '1496000원', '9072000원', '7613000원', '2592000원']

# 총 가격의 합!
# total=0
# for i in money:
#     total+=int(i[:-1])
# print(total)
# 마이너스 인덱싱으로 뒤에 원을 떼어버리고 문자열 타입인 수들을 int형으로 변환해 total에 반환

# 문자열 자르기
# split
# 특정패턴이 있는 자료를 처리할 때, 주로 사용
# 문자열.split(문자)
# 문자열을 특정문자를 기준으로 자른다! (리스트로 반환)
# for문과 많이 쓰인다.

# bool 값을 반환하는 함수 : if와 어울림
# iter 값을 반환하는 함수 : for와 어울림

# st = "50668 47084 48516 32 54624 32 49688 32 51080 50612 50836 32 54252 44592 54616 51648 47560 49464 50836 33"
# li=st.split(" ")
# su=0
# for i in li:
#     su+=int(i)
# print(su)

# split()은, 공백, 줄바꿈, 여러 이스캐이프 문자들을 기준으로 한 번에 잘라준다.
# 정리하면 split은 문자열을 리스트형으로 바꿔줌.
# 따라서 리스트형 안에 수만 있으면 인트형으로 바꿔서 합이나 간단한 수식 가능

# 주민번호는 카톡 자료실에

# female=0
# male=0

# for i in st.split():
    # 앞,뒤 두개의 인덱스 0,1로 나누고 뒷자리 선택한 후 맨 앞자리
    # print(i.split("-")[1][0])
    
#     if int(i[7])==1 or int(i[7])==3:
#         male+=1
#     elif int(i[7])==2 or int(i[7])==4:
#         female+=1
# print("남자의 수 : ",male,"여자의 수 : ",female)

# 다음 전화번호부에서 서울에 사는 사람은 몇 명인지 구하세요. 
# tel="051-467-3812,063-415-6555,052-625-4772,032-531-5953,064-827-6012,052-692-8561,064-823-3789,010-491-1997,063-530-4289,052-150-6157,063-572-6929,063-936-2859,033-232-9555,02-344-2750,064-887-3459,033-765-2510,032-559-7543,032-915-2607,052-559-7662,033-833-5519,051-290-5369,033-650-8479,052-281-1390,052-300-1420,052-544-9726,064-925-2719,010-469-5158,032-723-1581,033-539-1917,032-159-7218,031-492-6098,032-429-8334,011-103-9535,052-448-1674,064-892-1436,010-162-7673,051-570-6138,033-898-2627,02-675-9945,063-120-2776,011-376-8082,032-291-4939,063-736-8802,011-700-3852,02-412-5231,011-389-6593,010-659-7623,010-916-1633,02-330-2885,031-656-9661,033-761-7279,063-996-9299,051-617-8907,063-712-8804,051-849-7624,063-588-4903,02-741-6062,031-415-3526,051-328-1622,033-150-4368,031-165-4312,02-104-9548,031-743-5791,02-441-5435,051-942-9579,051-642-4186,031-818-8881,052-380-2000,031-402-8133,051-331-2834,02-322-2214,010-748-8566,033-692-5920,031-862-1634,011-670-6274,052-589-5972,033-265-8664,032-543-5223,052-440-4790,031-237-5231,033-361-4352,064-509-8007,02-332-9302,02-194-1360,064-424-9867,052-722-8783,064-650-5270,052-252-6531,031-984-9806,051-396-1842,064-123-5216,052-667-9050,02-611-4933,064-284-6071,031-706-1299,033-756-3527,032-823-1104,051-303-2347,031-759-9062,051-777-8662,032-337-2365,011-950-3160,064-204-7727,031-895-1753,010-311-7548,033-897-7666,033-919-4447,033-478-9033,031-262-1549,010-858-9560,031-144-7250,033-923-9936,02-970-6143,064-506-7538,010-982-5307,063-553-5267,010-321-9938,010-446-7476,010-171-1842,064-192-8123,063-421-6308,031-307-4016,051-243-3524,063-942-2065,033-291-6683,052-209-6666,033-456-6385,02-149-9500,031-369-3286,033-948-9494,063-412-1952,02-375-6732,011-368-7545,031-131-8655,032-854-1749,010-196-5251,032-445-6758,051-569-1790,011-315-9544,063-836-2189,051-432-5584,064-310-9168,064-972-5521,011-931-4179,063-725-4288,064-252-1447,052-471-3172,064-589-9150,051-342-8668,052-522-5048,031-343-7943,063-748-1729,02-345-9805,064-461-8533,011-809-6530,010-127-8920,063-209-9185,011-873-2487,010-536-2239,031-342-8570,051-207-3947,063-690-3842,031-315-5408,011-761-6179,02-907-7349,010-973-8915,052-852-5994,031-511-3913,031-953-5451,051-311-4324,010-641-7148,064-492-9639,033-281-3158,032-817-9098,063-855-7435,031-129-2311,064-760-4167,011-237-6061,064-127-9618,063-986-5729,051-571-3360,063-441-7545,064-236-5544,063-624-3430,064-677-8029,052-212-1925,011-679-9862,031-132-3441,010-744-6256,063-291-8981,033-486-9068,032-785-9720,063-304-8090,064-630-5786,032-864-7616,010-497-4888,011-122-9309,032-403-4569,02-228-7802,063-960-5587,063-200-4805,011-450-3385,051-258-2727,032-687-3864,02-229-4206,010-242-5427,033-715-4185,052-271-7964,02-970-6569,033-861-9342,064-439-3891,010-954-3109,010-227-5448,051-628-9320,063-747-4100,033-484-1096,011-662-8032,011-195-9045,02-524-9653,02-313-4152,031-317-6371,011-721-4056,031-320-5176,02-621-9596,033-262-7629,063-316-2325,033-731-2086,052-526-4766,031-958-5181,052-517-9702,063-696-8028,010-515-3971,063-188-4715,051-382-8082,032-846-1687,02-898-4088,032-514-3116,033-221-4883,064-381-3455,063-448-8542,02-406-8290,031-545-9620,02-702-7999,051-267-8729,032-134-1299,051-524-1961,011-171-9685,032-776-5245,064-529-2009,033-359-8344,031-997-4719,064-517-9408,032-874-4424,052-521-3127,032-889-7430,02-468-5438,010-501-2088,064-655-5617,052-153-6459,031-332-5232,051-770-9486,063-971-9211,063-461-6304,02-250-8235,011-198-4980,011-989-7699,052-861-8932,051-795-1303,063-397-5920,052-200-9046,031-362-6095,051-151-9921,031-501-8007,063-211-7725,010-711-9515,02-256-3144,064-952-8637,064-501-1041,011-862-1712,052-528-4144,031-543-4211,051-989-7778,031-196-7140,033-728-9964,051-427-2457,063-495-6479,033-249-1127,031-691-1313,051-937-3116,052-265-7567,052-329-6910,063-554-6102,031-447-7506,010-350-5210,031-433-6990,033-644-9536,011-835-4410,02-126-8089,052-451-2355,032-905-3490,032-625-2107,010-350-7408,064-654-6645,064-191-4098,051-751-3628,052-221-3009,010-614-5207,010-882-1159,010-670-9145,02-953-1818,063-834-6270,033-495-8297,02-844-4221,02-163-5046,051-828-4750,051-397-9280,033-278-1607,063-400-9913,063-910-3278,031-100-4632,02-339-9932,063-680-8017,051-891-7830,031-171-5320,063-102-1710,052-578-1327,051-478-2197,051-977-6063,064-860-2189,011-285-4612,051-421-9482,010-791-9356,032-160-3148,051-997-7320,010-882-6914,011-390-7174,063-499-1885,033-279-3188,063-777-9051,051-978-9572,064-892-7195,063-443-5652,031-697-7720,064-526-4609,02-252-9706,051-250-6616,052-551-1805,052-370-4071,033-183-6383,063-415-1892,010-353-7917,011-512-7135,063-916-6894,033-749-7936,051-927-4247,02-430-9333,063-836-7265,02-205-9654,011-464-3811,02-210-9143,02-104-9340,052-973-6346,033-514-2221,010-540-4127,02-837-9651,032-138-3376,010-257-4739,051-697-6877,02-326-5926,064-433-3076,051-408-6841,011-743-2613,063-762-6292,052-402-9451,051-323-4194,063-692-7267,010-539-2131,051-842-1559,033-661-2358,031-328-3385,033-561-9703,051-988-3699,051-565-2955,032-475-7563,051-853-8788,052-472-5184,063-155-5663,010-434-1001,010-900-5425,051-952-4572,011-146-6624,051-721-2545,032-113-8756,011-256-5068,031-343-9767,011-845-9442,02-598-3476,02-548-5834,02-620-8188,052-787-8898,051-657-2642,010-371-3435,010-772-2954,051-679-3457,010-947-3501,02-982-4765,063-722-1086,033-197-6212,010-375-7815,052-496-6936,064-397-6662,052-489-6355,011-989-8407,051-660-5685,011-923-7720,063-552-4119,032-625-6416,063-522-7100,011-496-5354,051-849-3141,064-542-8741,063-695-8274,010-845-8021,033-850-4539,031-401-4751,02-125-5125,063-809-8233,032-940-9723,033-573-8396,064-595-1923,02-403-8757,011-321-7738,011-106-6935,02-516-3584,011-196-4417,02-434-1778,02-554-2362,032-729-9882,052-836-5440,02-662-8261,051-453-5148,02-899-5273,052-656-1307,063-955-9574,052-887-6391,052-929-4178,064-681-3874,010-702-6211,064-549-9801,063-615-3597,064-471-4403,033-631-3308,064-292-3422,032-134-9473,051-303-6987,011-599-2597,032-581-8711,064-443-7804,031-489-2812,010-124-9660,011-666-1997,011-180-2808,031-634-7050,033-144-9258,051-500-1188,051-126-6030,02-250-5784,010-627-1015,052-692-6225,063-786-5948,032-791-3757,031-817-6014,011-426-4820,033-292-8880,032-877-4216,064-449-7573,033-251-5833,033-475-9946,052-488-3533,031-321-9671,033-214-5861,02-100-3144,051-886-6887,033-996-6222,010-538-5427,051-833-1143,063-910-5894,031-265-9120,011-128-9482,010-906-3108,033-278-6073,051-375-9001,02-524-5460,052-514-6752,02-459-2087,011-509-9609,011-477-3345,02-208-8802,010-907-6706,032-933-6584,063-172-2854,051-557-4736,063-371-9155,063-658-8485,033-716-7257,02-445-3119,011-681-9498,063-933-9424,052-620-4029,052-138-9466,063-900-4849"
# su=0
# for i in tel.split(","):
#     if i.split("-")[0]=="02":
#         su+=1
# print("서울에 사는 사람 수는 : ",su)

# 문자열.replace(a,b)
# 문자열 안의 a를 b로 바꿔서 문자열 반환
# a='hello'.replace('l','p')
# a="1 1 1 1 2,2,2,2".replace(","," ")
# a="1 1 1 1 2 2 2 2"
# a="1'm".replace("'m","am")
# ['i','am']

# 문자열.count('a')
# 문자열 안의 a의 개수를 반환!
# a='hello'.count('l')
# "island list is perfect".count("is") > 문자열의 카운트 > is는 세개
# "island list is perfect".split().count("is") > 리스트의 카운트 > is는 하나
# 단어같은거 셀때는 리스트에서 세줘야 제대로 셀 수 있다.

# 문자열.strip() > 공백 없애준다.
# 문자열.upper() > 모든 문자 대문자로 변경
# 문자열.lower() > 모든 문자 소문자로 변경

# 문자열 대소비교(유니코드 체제로 생각하면 된다!)
#           ord(문자)
# 유니코드 <------------ 문자
#        ------------>
#         chr(유니코드)
# 아스키코드    (1Byte = 8bit)  2^8 = 256
# 유니코드     (2Byte = 16bit) 